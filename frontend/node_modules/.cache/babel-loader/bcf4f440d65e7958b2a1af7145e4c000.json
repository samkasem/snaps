{"ast":null,"code":"import _slicedToArray from\"D:/Projects/snaps/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{client}from'../client';import{feedQuery,searchQuery}from'../utils/data';import MasonryLayout from'./MasonryLayout.jsx';import Spinner from'./Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";var Feed=function Feed(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),snaps=_useState2[0],setSnaps=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useParams=useParams(),categoryId=_useParams.categoryId;useEffect(function(){if(categoryId){setLoading(true);var query=searchQuery(categoryId);client.fetch(query).then(function(data){setSnaps(data);setLoading(false);});}else{setLoading(true);client.fetch(feedQuery).then(function(data){setSnaps(data);setLoading(false);});}},[categoryId]);var ideaName=categoryId||'new';if(loading){return/*#__PURE__*/_jsx(Spinner,{message:\"We are adding \".concat(ideaName,\" ideas to your feed!\")});}return/*#__PURE__*/_jsx(\"div\",{children:snaps&&/*#__PURE__*/_jsx(MasonryLayout,{snaps:snaps})});};export default Feed;","map":{"version":3,"names":["React","useState","useEffect","useParams","client","feedQuery","searchQuery","MasonryLayout","Spinner","Feed","snaps","setSnaps","loading","setLoading","categoryId","query","fetch","then","data","ideaName"],"sources":["D:/Projects/snaps/frontend/src/components/Feed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { client } from '../client'\r\nimport { feedQuery, searchQuery } from '../utils/data'\r\nimport MasonryLayout from './MasonryLayout.jsx'\r\nimport Spinner from './Spinner'\r\n\r\nconst Feed = () => {\r\n  const [snaps, setSnaps] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const { categoryId } = useParams()\r\n\r\n  useEffect(() => {\r\n    if (categoryId) {\r\n      setLoading(true)\r\n      const query = searchQuery(categoryId)\r\n      client.fetch(query).then((data) => {\r\n        setSnaps(data)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      setLoading(true)\r\n\r\n      client.fetch(feedQuery).then((data) => {\r\n        setSnaps(data)\r\n        setLoading(false)\r\n      })\r\n    }\r\n  }, [categoryId])\r\n  const ideaName = categoryId || 'new'\r\n  if (loading) {\r\n    return <Spinner message={`We are adding ${ideaName} ideas to your feed!`} />\r\n  }\r\n  return <div>{snaps && <MasonryLayout snaps={snaps} />}</div>\r\n}\r\n\r\nexport default Feed\r\n"],"mappings":"gHAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,eAAvC,CACA,MAAOC,cAAP,KAA0B,qBAA1B,CACA,MAAOC,QAAP,KAAoB,WAApB,C,2CAEA,GAAMC,KAAI,CAAG,QAAPA,KAAO,EAAM,CACjB,cAA0BR,QAAQ,CAAC,IAAD,CAAlC,wCAAOS,KAAP,eAAcC,QAAd,eACA,eAA8BV,QAAQ,CAAC,KAAD,CAAtC,yCAAOW,OAAP,eAAgBC,UAAhB,eACA,eAAuBV,SAAS,EAAhC,CAAQW,UAAR,YAAQA,UAAR,CAEAZ,SAAS,CAAC,UAAM,CACd,GAAIY,UAAJ,CAAgB,CACdD,UAAU,CAAC,IAAD,CAAV,CACA,GAAME,MAAK,CAAGT,WAAW,CAACQ,UAAD,CAAzB,CACAV,MAAM,CAACY,KAAP,CAAaD,KAAb,EAAoBE,IAApB,CAAyB,SAACC,IAAD,CAAU,CACjCP,QAAQ,CAACO,IAAD,CAAR,CACAL,UAAU,CAAC,KAAD,CAAV,CACD,CAHD,EAID,CAPD,IAOO,CACLA,UAAU,CAAC,IAAD,CAAV,CAEAT,MAAM,CAACY,KAAP,CAAaX,SAAb,EAAwBY,IAAxB,CAA6B,SAACC,IAAD,CAAU,CACrCP,QAAQ,CAACO,IAAD,CAAR,CACAL,UAAU,CAAC,KAAD,CAAV,CACD,CAHD,EAID,CACF,CAhBQ,CAgBN,CAACC,UAAD,CAhBM,CAAT,CAiBA,GAAMK,SAAQ,CAAGL,UAAU,EAAI,KAA/B,CACA,GAAIF,OAAJ,CAAa,CACX,mBAAO,KAAC,OAAD,EAAS,OAAO,yBAAmBO,QAAnB,wBAAhB,EAAP,CACD,CACD,mBAAO,qBAAMT,KAAK,eAAI,KAAC,aAAD,EAAe,KAAK,CAAEA,KAAtB,EAAf,EAAP,CACD,CA3BD,CA6BA,cAAeD,KAAf"},"metadata":{},"sourceType":"module"}